<?xml version="1.0" ?> 
<project name="hccv" default="dist" basedir="..">
  <description>Ant build file for building hadoop complete composition vector.</description>

  <!-- Global properties: -->
  <property name="proj"    value="hccv"/>
  <property name="version" value="1.0.1"/>
  <property name="src"   location="${basedir}/src/java"/>
  <property name="build" location="${basedir}/build"/>
  <property name="dist"  location="${basedir}/dist"/>
  <property name="lib"   location="${basedir}/lib"/>
  <property name="ccvdist" location="${basedir}/../ccv2/dist"/>          <!-- hack for now don't want copy in lib -->

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <property name="buildjar"  value="${dist}/${proj}-${version}-${DSTAMP}.jar"/>
    <property name="distjar"   value="${dist}/${proj}-${version}.jar"/>
    <property name="bundlejar" value="${dist}/${proj}-${version}-${DSTAMP}-bundle.jar"/>
  </target>

  <path id="hccv.classpath">
    <!-- <pathelement location="lib/"/>  for java 6 only -->
    <fileset dir="${lib}" includes="**/*.jar" />
    <fileset dir="${ccvdist}" includes="**/*.jar" />
  </path>

  <target name="compile" depends="init" description="Compile the source" >
    <!-- Compile the java code from ${src} into ${build} -->
    <mkdir dir="${build}"/>
    <javac srcdir="${src}" destdir="${build}" debug="on" debuglevel="lines,vars,source">
      <classpath refid="hccv.classpath"/>
    </javac>
  </target>

  <target name="dist" depends="compile" description="Generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir  dir="${dist}"/>
    <!-- <symlink link="${dist}/lib" resource="${basedir}/lib" />  -->
    <mkdir dir="${dist}/lib" />
    <copy todir="${dist}/lib">
      <fileset dir="${lib}"  excludes="**/.svn"/> 
      <!-- <path refid="ccv.core.classpath" /> -->
    </copy>

    <!-- Convert project class path to string property using unix-style directory separators -->
    <pathconvert property="mf.classpath" pathsep=" " dirsep="/">
      <path refid="hccv.classpath" />
      <flattenmapper />
      <!-- map absolute path to local path -->
      <map from="" to="lib/"/>
    </pathconvert>

    <jar jarfile="${buildjar}" basedir="${build}">
      <zipfileset src="${ccvdist}/ccv-2.2.1.jar"          includes="**/*.class  **/*..properties" />   <!-- hack for now -->
      <!-- <zipfileset src="${lib}/json-2.0.0.jar" includes="**/*.class" /> -->
      <zipfileset src="${lib}/jackson-core-asl-1.2.0.jar" includes="**/*.class" />
      <zipfileset src="${lib}/phylogeny-core-1.3.1.jar"   includes="**/*.class" />
      <zipfileset src="${lib}/weka-3.5.7.jar"             includes="**/*.class" />
      <manifest>
        <attribute name="Class-Path" value="${mf.classpath}"/>
        <attribute name="Main-Class" value="org.mitre.bio.BioDriver"/>
        <attribute name="Version" value="${version}"/>
      </manifest>
    </jar>
  </target>

  <target name="bundle-dist" depends="dist" description="Bundles jar files for hadoop">
    <!-- Convert project class path to string property -->
    <pathconvert property="mf.classpath" dirsep="/" pathsep=" ">
      <path refid="hccv.classpath" />
      <flattenmapper />
      <!-- map absolute path to local path -->
      <map from="" to="lib/"/>
    </pathconvert>

    <jar jarfile="${bundlejar}" basedir="${build}">
      <zipfileset src="${buildjar}" includes="**/*"/>
      <zipfileset src="${ccvdist}/ccv-2.2.1.jar"          includes="**/*.class  **/*..properties" />    <!-- hack for now -->
      <zipfileset src="${lib}/jackson-core-asl-1.2.0.jar" includes="**/*.class" />
      <zipfileset src="${lib}/phylogeny-core-1.3.1.jar"   includes="**/*.class" />
      <zipfileset src="${lib}/weka-3.5.7.jar"             includes="**/*.class" />
      <manifest>
        <attribute name="Class-Path" value="${mf.classpath}"/>
        <attribute name="Main-Class" value="org.mitre.bio.BioDriver"/>
        <attribute name="Version" value="${version}"/>
      </manifest>
    </jar>
  </target>

  <target name="dist-version" depends="bundle-dist">
    <copy file="${bundlejar}" tofile="${distjar}"/>
  </target>

  <target name="clean" depends="init" description="Clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="gen-doc" description="Generate java doc">
    <javadoc packagenames="org.mitre.*"
	     sourcepath="${src}"
	     defaultexcludes="yes"
	     destdir="${basedir}/docs/api"
	     author="true"
	     version="true"
	     use="true"
	     windowtitle="Hadoop CCV API">
      <doctitle><![CDATA[<h1>Hadoop CompleteCompositionVectors</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; 2010 The MITRE Corp. All Rights Reserved.</i>]]></bottom>
      <!-- For externally (and internally) generated java doc?
	   <link href="http://java.sun.com/javase/6/docs/api/" />
	   <link href="http://hadoop.apache.org/core/docs/current/api/" />
      -->
    </javadoc>
  </target>

</project>
